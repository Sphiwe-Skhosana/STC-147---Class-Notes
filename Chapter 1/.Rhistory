notch = FALSE,
pars = list(boxwex = 0.6,  # Box width
whisklty = 1,   # Whisker line type (solid)
staplelty = 0)) # Staple (end line) type (none)
# Add grid lines for better readability
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
# Set seed for reproducibility
set.seed(123)
# Number of observations
n <- 1000
## Generate distributions (same as before)
mod_pos_skew <- rgamma(n, shape = 2, scale = 1)
# Create boxplot with outliers
boxplot(mod_pos_skew, data = mod_pos_skew,
main = "Box-and-Whisker Plot Showing Outliers",
xlab = "",
ylab = "Values",
col = c("lightblue"),
border = "darkblue",
outline = TRUE,  # This shows outliers (default is TRUE)
notch = FALSE,
pars = list(boxwex = 0.6,  # Box width
whisklty = 1,   # Whisker line type (solid)
staplelty = 0)) # Staple (end line) type (none)
# Add grid lines for better readability
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Boxplot.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Box4.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Boxes2.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Boxes3.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Boxes4.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist12.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist13.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist2.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist3.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist4.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist5.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist6.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist7.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist8.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist9.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist11.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist10.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist14.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist13.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist15.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Hist16.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar2.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar3.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar4.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar5.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar5.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Bar5.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie2.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie3.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie4.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie4.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie5.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie6.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Pie7.png"))
plot(env$Rainfall_mm, env$Humidity_pct)
plot(env$Rainfall_mm, env$Humidity_pct,env$Temperature_C)
plot(env$Rainfall_mm,env$Temperature_C)
plot(env$Rainfall_mm,env$WindSpeed_kmh)
plant <- read_excel("plant_growth_environment.xlsx")
head(plant)
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter8.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter2.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter9.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter3.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter4.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter5.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter6.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter7.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Scatter8.png"))
# Load required packages
library(ggplot2)
set.seed(123) # For reproducibility
# Create a function to generate and plot data with different relationships
plot_relationships <- function() {
# Generate base data
x <- seq(1, 100, length.out = 100)
# Create data frames for each type of relationship
data_strong_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 10),
type = "Strong Positive Linear"
)
data_moderate_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Positive Linear"
)
data_strong_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 10),
type = "Strong Negative Linear"
)
data_moderate_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Negative Linear"
)
data_no_relationship <- data.frame(
x = x,
y = rnorm(100, mean = 50, sd = 30),
type = "No Relationship"
)
data_nonlinear <- data.frame(
x = x,
y = 50 + 30 * sin(x/10) + rnorm(100, mean = 0, sd = 10),
type = "Non-linear Relationship"
)
# Combine all data
all_data <- rbind(
data_strong_pos,
data_moderate_pos,
data_strong_neg,
data_moderate_neg,
data_no_relationship,
data_nonlinear
)
# Create faceted plot
ggplot(all_data, aes(x, y)) +
geom_point(color = "blue", alpha = 0.7) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "red",
linetype = "dashed", linewidth = 0.7) +
facet_wrap(~type, scales = "free", ncol = 2) +
labs(title = "Illustration of Different Types of Relationships",
subtitle = "Dashed red line shows linear fit",
x = "X Variable", y = "Y Variable") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
}
# Generate and display the plot
plot_relationships()
# Load required packages
library(ggplot2)
library(dplyr)
set.seed(123) # For reproducibility
# Create a function to generate and plot data with different relationships
plot_relationships <- function() {
# Generate base data
x <- seq(1, 100, length.out = 100)
# Create data frames for each type of relationship
data_strong_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 10),
type = "Strong Positive Linear"
)
data_moderate_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Positive Linear"
)
data_strong_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 10),
type = "Strong Negative Linear"
)
data_moderate_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Negative Linear"
)
data_no_relationship <- data.frame(
x = x,
y = rnorm(100, mean = 50, sd = 30),
type = "No Relationship"
)
data_nonlinear <- data.frame(
x = x,
y = 50 + 30 * sin(x/10) + rnorm(100, mean = 0, sd = 10),
type = "Non-linear Relationship"
)
# Combine all data
all_data <- rbind(
data_strong_pos,
data_moderate_pos,
data_strong_neg,
data_moderate_neg,
data_no_relationship,
data_nonlinear
)
# Calculate correlation coefficients for each group
cor_data <- all_data %>%
group_by(type) %>%
summarize(cor = round(cor(x, y), 2)) %>%
mutate(label = paste0("r = ", cor))
# Create faceted plot with correlation coefficients
ggplot(all_data, aes(x, y)) +
geom_point(color = "blue", alpha = 0.7) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "red",
linetype = "dashed", linewidth = 0.7) +
geom_text(data = cor_data,
aes(x = Inf, y = Inf, label = label),
hjust = 1.1, vjust = 1.5, size = 5, color = "darkred",
fontface = "bold") +
facet_wrap(~type, scales = "free", ncol = 2) +
labs(title = "Illustration of Different Types of Relationships",
subtitle = "Dashed red line shows linear fit | r = Pearson correlation coefficient",
x = "X Variable", y = "Y Variable") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
}
# Generate and display the plot
plot_relationships()
# Load required packages
library(ggplot2)
library(dplyr)
set.seed(123) # For reproducibility
# Create a function to generate and plot data with different relationships
plot_relationships <- function() {
# Generate base data
x <- seq(1, 100, length.out = 100)
# Create data frames for each type of relationship
data_strong_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 10),
type = "Strong Positive Linear"
)
data_moderate_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Positive Linear"
)
data_strong_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 10),
type = "Strong Negative Linear"
)
data_moderate_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Negative Linear"
)
data_no_relationship <- data.frame(
x = x,
y = rnorm(100, mean = 50, sd = 30),
type = "No Relationship"
)
data_nonlinear <- data.frame(
x = x,
y = 50 + 30 * sin(x/10) + rnorm(100, mean = 0, sd = 10),
type = "Non-linear Relationship"
)
# Combine all data
all_data <- rbind(
data_strong_pos,
data_moderate_pos,
data_strong_neg,
data_moderate_neg,
data_no_relationship,
data_nonlinear
)
# Calculate correlation coefficients and set positions for each group
cor_data <- all_data %>%
group_by(type) %>%
summarize(cor = round(cor(x, y), 2)) %>%
mutate(
label = paste0("r = ", cor),
# Set custom positions for each plot type
x_pos = case_when(
type %in% c("Moderate Positive Linear", "No Relationship") ~ -Inf,
type == "Non-linear Relationship" ~ -Inf,
TRUE ~ Inf
),
y_pos = case_when(
type %in% c("Moderate Positive Linear", "No Relationship") ~ Inf,
type == "Non-linear Relationship" ~ -Inf,
TRUE ~ Inf
),
hjust = case_when(
type %in% c("Moderate Positive Linear", "No Relationship", "Non-linear Relationship") ~ 0,
TRUE ~ 1
),
vjust = case_when(
type %in% c("Moderate Positive Linear", "No Relationship") ~ 1.5,
type == "Non-linear Relationship" ~ -0.5,
TRUE ~ 1.5
)
)
# Create faceted plot with correlation coefficients
ggplot(all_data, aes(x, y)) +
geom_point(color = "blue", alpha = 0.7) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "red",
linetype = "dashed", linewidth = 0.7) +
geom_text(data = cor_data,
aes(x = x_pos, y = y_pos, label = label,
hjust = hjust, vjust = vjust),
size = 5, color = "darkred", fontface = "bold") +
facet_wrap(~type, scales = "free", ncol = 2) +
labs(title = "Illustration of Different Types of Relationships",
subtitle = "Dashed red line shows linear fit | r = Pearson correlation coefficient",
x = "X Variable", y = "Y Variable") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
}
# Generate and display the plot
plot_relationships()
# Load required packages
library(ggplot2)
library(dplyr)
set.seed(123) # For reproducibility
# Create a function to generate and plot data with different relationships
plot_relationships <- function() {
# Generate base data
x <- seq(1, 100, length.out = 100)
# Create data frames for each type of relationship
data_strong_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 10),
type = "Strong Positive Linear"
)
data_moderate_pos <- data.frame(
x = x,
y = x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Positive Linear"
)
data_strong_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 10),
type = "Strong Negative Linear"
)
data_moderate_neg <- data.frame(
x = x,
y = -x + rnorm(100, mean = 0, sd = 50),
type = "Moderate Negative Linear"
)
data_no_relationship <- data.frame(
x = x,
y = rnorm(100, mean = 50, sd = 30),
type = "No Relationship"
)
data_nonlinear <- data.frame(
x = x,
y = 50 + 30 * sin(x/10) + rnorm(100, mean = 0, sd = 10),
type = "Non-linear Relationship"
)
# Combine all data
all_data <- rbind(
data_strong_pos,
data_moderate_pos,
data_strong_neg,
data_moderate_neg,
data_no_relationship,
data_nonlinear
)
# Calculate correlation coefficients and set positions for each group
cor_data <- all_data %>%
group_by(type) %>%
summarize(cor = round(cor(x, y), 2)) %>%
mutate(
label = paste0("r = ", cor),
# Set custom positions for each plot type
x_pos = case_when(
type %in% c("Moderate Positive Linear", "No Relationship") ~ -Inf,
type == "Non-linear Relationship" ~ -Inf,
TRUE ~ Inf
),
y_pos = case_when(
type %in% c("Moderate Positive Linear", "No Relationship") ~ Inf,
type == "Non-linear Relationship" ~ -Inf,
type == "Strong Positive Linear" ~ -Inf,  # Lower position
TRUE ~ Inf
),
hjust = case_when(
type %in% c("Moderate Positive Linear", "No Relationship", "Non-linear Relationship") ~ 0,
TRUE ~ 1
),
vjust = case_when(
type %in% c("Moderate Positive Linear", "No Relationship") ~ 1.5,
type == "Non-linear Relationship" ~ -0.5,
type == "Strong Positive Linear" ~ -0.5,  # Lower right position
TRUE ~ 1.5
)
)
# Create faceted plot with correlation coefficients
ggplot(all_data, aes(x, y)) +
geom_point(color = "blue", alpha = 0.7) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "red",
linetype = "dashed", linewidth = 0.7) +
geom_text(data = cor_data,
aes(x = x_pos, y = y_pos, label = label,
hjust = hjust, vjust = vjust),
size = 5, color = "darkred", fontface = "bold") +
facet_wrap(~type, scales = "free", ncol = 2) +
labs(title = "Illustration of Different Types of Relationships",
subtitle = "Dashed red line shows linear fit | r = Pearson correlation coefficient",
x = "X Variable", y = "Y Variable") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
}
# Generate and display the plot
plot_relationships()
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Line1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Line1.png"))
library(graphics)
#par(mfrow=(c(2,2)))
knitr::include_graphics(c("Images/Line2.png"))
